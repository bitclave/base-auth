!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("BASEAuth",[],e):"object"==typeof exports?exports.BASEAuth=e():t.BASEAuth=e()}(window,function(){return function(t){var e={};function i(n){if(e[n])return e[n].exports;var s=e[n]={i:n,l:!1,exports:{}};return t[n].call(s.exports,s,s.exports,i),s.l=!0,s.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},i.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){"use strict";function n(t,e,i,n){this.id=t,this.methodName=e,this.args=i,this.resolve=n}function s(t,e){this._targetWindow=t,this._targetOrigin=e,this._calls={},this._listeners={},this._currentCallId=1,"*"!==this._targetOrigin&&"/"!==this._targetOrigin[this._targetOrigin.length-1]&&(this._targetOrigin+="/"),window.addEventListener("message",this._onMessage.bind(this))}function r(t,e,i,n,s){this._popupUrl=i,this._popupName=n,this._widgetOrigin=s,this._baseNodeApi=new Base.NodeAPI(t),this._parent=window.parent,this._parentOrigin=null,this._parentRpc=null,e.on("click",this._onClickLogin.bind(this))}i.r(e),n.prototype.send=function(t,e){t.postMessage({rpcCall:{id:this.id,methodName:this.methodName,args:this.args}},e)},n.prototype.respond=function(t,e,i){t.postMessage({rpcCall:{id:this.id,methodName:this.methodName,args:this.args,value:i}},e)},s.prototype.call=function(t,e){return new Promise(function(i,s){const r=this._currentCallId++;this._calls[r]=new n(r,t,e,i),this._calls[r].send(this._targetWindow,this._targetOrigin)}.bind(this))},s.prototype.listen=function(t,e){this._listeners[t]||(this._listeners[t]=[]),this._listeners[t].push(e)},s.prototype.once=function(t){return new Promise(function(e,i){this._listeners[t]||(this._listeners[t]=[]);const n=this._listeners[t];n.push(function(t){n.splice(n.indexOf(this),1),e(t)})}.bind(this))},s.prototype._onMessage=function(t){let e=t.origin;if("/"!==e[e.length-1]&&(e=t.origin+"/"),"*"!==this._targetOrigin&&e!==this._targetOrigin)return;if(t.source!==this._targetWindow)return;if(!t.data.rpcCall)return;const i=new n(t.data.rpcCall.id,t.data.rpcCall.methodName,t.data.rpcCall.args),s=this._listeners[t.data.rpcCall.methodName];if(s)for(let t=0,e=s.length;t<e;t++)s[t](i);this._calls[t.data.rpcCall.id]&&(this._calls[t.data.rpcCall.id].resolve(t.data.rpcCall.value),delete this._calls[t.data.rpcCall.id])},r.prototype._onClickLogin=function(t){const e=$(t.target),i=window.open(this._popupUrl,this._popupName,"height=500, width=500");new s(i,this._widgetOrigin).once("submitMnenomic").then(function(t){return e.prop("disabled",!0),e.text("Loading..."),this._login(t.args[0])}.bind(this)).then(function(){e.text("Logged in!")}),i.focus()},r.prototype._login=function(t){return new s(this._parent,"*").call("getOrigin",[]).then(function(t){this._parentOrigin=t,this._parentRpc=new s(this._parent,this._parentOrigin)}.bind(this)).then(function(){return this._baseNodeApi.accountManager.checkAccount(t)}.bind(this)).then(function(t){return t},function(e){if(404==e.status)return this._baseNodeApi.accountManager.registration(t)}.bind(this)).then(function(t){this._parentRpc.call("onLogin",[t]),this._listen()}.bind(this))},r.prototype._listen=function(){this._parentRpc.listen("offerManager.getAllOffers",this._getAllOffers.bind(this)),this._parentRpc.listen("profileManager.getData",this._getData.bind(this)),this._parentRpc.listen("profileManager.updateData",this._updateData.bind(this))},r.prototype._respond=function(t,e){t.respond(this._parent,this._parentOrigin,e)},r.prototype._getAllOffers=function(t){this._baseNodeApi.offerManager.getAllOffers().then(this._respond.bind(this,t))},r.prototype._getData=function(t){this._baseNodeApi.profileManager.getData().then(this._respond.bind(this,t))},r.prototype._updateData=function(t){const e=t.args[0],i=new Map(Object.keys(e).map(t=>[t,e[t]]));this._baseNodeApi.profileManager.updateData(i).then(this._respond.bind(this,t))},i.d(e,"IFrameRPC",function(){return s}),i.d(e,"Widget",function(){return r})}])});